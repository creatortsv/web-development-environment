version: 3.7

services:

    db:
        image: "postgres:${POSTGRES_VERSION}"
        restart: unless-stopped
        env_file: ./.env
        container_name: "postgres@${POSTGRES_VERSION}"
        tty: true
        # TODO: entrypoint: ./postgres/entrypoint.sh

        environment:
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

        volumes:
            - type: volume
                source: postgres_data
                target: /var/lib/postgresql/data
                volume:
                    nocopy: true

        ports:
            - "${POSTGRES_PORT}:5432"
            
        networks:
            - app-network
    
    node:
        image: "node:${NODE_VERSION}"
        container_name: "node@${NODE_VERSION}"
        restart: unless-stopped
        user: "root"
        tty: true
        env_file: ./.env

        # TODO: working_dir: /home/node
        # TODO: entrypoint: ./node/entrypoint.sh
        # TODO: volumes: /path/to/project:/home/node/project [...]

        environment:
            NODE_ENV: ${NODE_ENV}

        ports:
            - "${NODE_PORT}:8080"

        networks:
            - app-network

        depends_on:
            - db
            - php

    php:
        image: "php:${PHP_VERSION}-fpm"
        container_name: "php@${PHP_VERSION}"
        restart: unless-stopped
        user: "root"
        tty: true
        env_file: ./.env

        # TODO: working_dir: /var/web
        # TODO: entrypoint: ./php/entrypoint.sh
        # TODO: volumes: /path/to/project:/var/web/project [...]

        ports:
            - "${PHP_PORT}:8000"

        depends_on:
            - db
            - rabbit

        networks:
            - app-network

    rabbit:
        image: "rabbitmq:${RABBITMQ_VERSION}"
        container_name: "rabbitmq@${RABBITMQ_VERSION}"
        restart: unless-stopped
        env_file: ./.env
        volumes:
            - type: volume
                source: rabbitmq_data
                target: /var/lib/rabbitmq/
                volume:
                    nocopy: true

        environment:
            RABBITMQ_ERLANG_COOKIE: ${RABBITMQ_ERLANG_COOKIE}
            RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
            RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}

        ports:
            - "${RABBITMQ_PORT}:5672"
            - "${RABBITMQ_PORT_MANAGMENT}:15672"

volumes:
    postgres_data:
    rabbitmq_data:

networks:
    env-network:
        driver: bridge